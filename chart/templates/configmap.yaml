apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    {{- include "nats-gatekeeper.labels" . | nindent 4 }}
  name: {{ include "nats-gatekeeper.name" . }}-config
data:
  App.toml: |
    {{- $id := list (include "nats-gatekeeper.name" . ) (include "nats-gatekeeper.shortNamespace" .) "svc.netology-group.services" | compact | join "." }}
    id = {{ $id | quote }}

    http_addr = "0.0.0.0:{{ get .Values.service.ports "http" }}"

    expiration = {{ .Values.config.expiration | quote }}
    max_subscriptions = {{ .Values.config.max_subscriptions }}
    max_payload = {{ .Values.config.max_payload }}


    [metrics.http]
    bind_address = "0.0.0.0:{{ get .Values.service.ports "metrics" }}"

    {{- println "" }}

    {{- range $audience, $opts := .Values.audiences }}
    ##
    ## {{ $audience }}
    ##
    {{- $svc_audience := list (include "nats-gatekeeper.shortNamespace" $) "svc" $audience | compact | join "." }}
    {{- $usr_audience := list (include "nats-gatekeeper.shortNamespace" $) "usr" $audience | compact | join "." }}
    {{- with "authn" | get $opts }}
    [authn.{{ list "iam" $svc_audience | join "." | quote }}]
    audience = [{{ $svc_audience | quote }}, {{ $usr_audience | quote }}]
    algorithm = "ES256"
    key = {{ "key" | get . | quote }}
    {{- end }}

    {{- $ns_audience := list (include "nats-gatekeeper.shortNamespace" $) $audience | compact | join "."  }}
    {{- println "" }}

    {{- with "authz" | get $opts }}
    [authz.{{ $ns_audience | quote }}]
    type = {{ .type | quote }}
    {{- if eq "http" .type }}
    uri = {{ $ns_audience | list "http://dispatcher-service:8080/api/v1/authz/" | join "" | default .uri | quote }}
    algorithm = {{ default "ES256" .algorithm | quote }}
    key = {{ default "data/keys/svc.private_key.p8.der" .key | quote }}
    user_agent = {{ default $id .user_agent | quote }}
    max_retries = {{ default 3 .max_retries }}
    {{- end}}
    {{- end }}
    {{- println "" }}
    {{- end }}
